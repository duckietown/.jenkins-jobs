<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Autobuild for repository dt-autolab-proxy</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.34.5">
      <projectUrl>https://github.com/duckietown/dt-autolab-proxy</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:duckietown/dt-autolab-proxy</url>
        <credentialsId>GITHUB_SSH_KEY</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>daffy-staging</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>daffy-staging</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>d249580a-b182-41fb-8f3d-ec5d24530e71</authToken>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>Docker Autobuild - daffy-staging - dt-commons - arm32v7</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.34.5">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
# configure git to use SSH key
export GIT_SSH_COMMAND='ssh -i "${GIT_SSH_KEY_FILEPATH}" -o IdentitiesOnly=yes'

# fetch commands
git clone -b daffy-staging https://github.com/duckietown/duckietown-shell-commands ./commands
export DTSHELL_COMMANDS="$(pwd)/commands"

# fetch code
git clone -b daffy-staging git@github.com:duckietown/dt-autolab-proxy ./ws
git -C ./ws fetch --tags

# install/update duckietown-shell
export PIP_INDEX_URL="https://staging.duckietown.org/root/devel/"
export DTSERVER="https://challenges-stage.duckietown.org"
export DOCKER_REGISTRY="registry-stage2.duckietown.org"
export DOCKER_USERNAME="duckietowndaemon"

# switch to CI commands
dts --set-version daffy-staging exit

# enter the workspace
cd ./ws

if test -f "requirements.txt"; then
    pur -r requirements.txt -o requirements.resolved
fi

if test -f "dependencies-py.txt"; then
    pur -r dependencies-py.txt -o dependencies-py.resolved
fi

if test -f "dependencies-py3.txt"; then
    pur -r dependencies-py3.txt -o dependencies-py3.resolved
fi

# pull, build(cloud), push, clean
dts --debug \
    devel buildx \
        --arch arm32v7 \
        --tag daffy \
        --base-tag daffy \
        --ci

# leave the workspace
cd ../

# clean workspace
rm -rf ./commands
rm -rf ./ws
      </command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.43">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.43">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@523.vd859a_4b_122e6">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>STAGING_DOCKER_PASSWORD</credentialsId>
          <variable>DOCKER_PASSWORD</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>DUCKIETOWN_CI_DT_TOKEN</credentialsId>
          <variable>DUCKIETOWN_CI_DT_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
        <org.jenkinsci.plugins.credentialsbinding.impl.SSHUserPrivateKeyBinding>
          <credentialsId>GITHUB_SSH_KEY</credentialsId>
          <keyFileVariable>GIT_SSH_KEY_FILEPATH</keyFileVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.SSHUserPrivateKeyBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.24">
      <strategy class="hudson.plugins.build_timeout.impl.ElasticTimeOutStrategy">
        <timeoutPercentage>200</timeoutPercentage>
        <numberOfBuilds>3</numberOfBuilds>
        <failSafeTimeoutDuration>true</failSafeTimeoutDuration>
        <timeoutMinutesElasticDefault>120</timeoutMinutesElasticDefault>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>